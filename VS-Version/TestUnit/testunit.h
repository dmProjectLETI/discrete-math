/*
 * created by tim.tim 10.04.2016
 *
 * Unit that contains some functions for testing
 * base modules, like Natural, or Integer, or ...
 *
 * Before using that recommend to do "srand(time(0));"
 * for best random varys
*/

#ifndef TESTUNIT_H
#define TESTUNIT_H

#include "structs.h"

// @@@ Block of "write"-functions

//write Natural N to standart output device
void writeNatural(Natural N);
//write Integer I to standart output device
void writeInteger(Integer I);
//write Ratio R to standart output device
void writeRatio(Ratio R);
//write Polynomial P to standart output device
void writePolynomial(Polynomial P);


// @@@ Block of "generate"-functions
//return random-generated Polynomial
Polynomial generatePolynomial();
//return random-generated Ratio
Ratio generateRatio();
//return random-generated Integer
Integer generateInteger();
//return random-generated Natural
Natural generateNatural();
//return Natural that generated by n
Natural generateNatural(unsigned n);
//return Integer that generated by i
Integer generateInteger(int i);
//return Ratio that generated by n and dn
Ratio generateRatio(int n, unsigned dn);
//return Polynomial that generated by vector<Ratio> v
Polynomial generatePolynomial(vector<Ratio> v);

#endif // TESTUNIT_H
